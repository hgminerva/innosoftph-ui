{"version":3,"file":"progress-bar.component.js","sourceRoot":"","sources":["../../inlined/components/progress-bar/progress-bar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, Input, ChangeDetectionStrategy\n} from '@angular/core';\n\n\nexport class ProgressBarComponent {\n\n   state;\n   positionUsing;\n   ease;\n   speed;\n   showSpinner;\n   direction;\n   thick;\n   color;\n\n  /** Styles for progressbar */\n  barStyles() {\n    let styles = {\n      transition: 'all ' + this.speed + 'ms ' + this.ease,\n      backgroundColor: this.color\n    };\n    /** Get positioning value */\n    let n = (!this.state.value) ? {\n        leftToRightIncreased: -100,\n        leftToRightReduced: 0,\n        rightToLeftIncreased: 100,\n        rightToLeftReduced: 0\n      }[this.direction] : this.toPercentage(this.state.value);\n\n    switch (this.positionUsing) {\n      case 'translate3d':\n        styles = Object.assign({}, styles, {\n          transform: 'translate3d(' + n + '%,0,0)',\n          '-webkit-transform': 'translate3d(' + n + '%,0,0)',\n          '-moz-transform': 'translate3d(' + n + '%,0,0)',\n          '-o-transform': 'translate3d(' + n + '%,0,0)',\n          '-ms-transform': 'translate3d(' + n + '%,0,0)'\n        });\n        break;\n      case 'translate':\n        styles = Object.assign({}, styles, {\n          transform: 'translate(' + n + '%,0)',\n          '-webkit-transform': 'translate(' + n + '%,0)',\n          '-moz-transform': 'translate(' + n + '%,0)',\n          '-o-transform': 'translate(' + n + '%,0)',\n          '-ms-transform': 'translate(' + n + '%,0)'\n        });\n        break;\n      default:\n        styles = Object.assign({}, styles, {\n          marginLeft: n + '%'\n        });\n    }\n    return styles;\n  }\n\n  /** Styles for progressbar tail */\n  shadowStyles(){\n    return {\n      boxShadow: `0 0 10px ${this.color}, 0 0 5px ${this.color}`\n    }\n  }\n\n  toPercentage(n) {\n    return ({\n        'leftToRightIncreased': -1 + n,\n        'leftToRightReduced': -n,\n        'rightToLeftIncreased': 1 - n,\n        'rightToLeftReduced': n\n      }[this.direction]) * 100;\n  }\n\n  spinnerClasses() {\n    return {\n      'leftToRightIncreased': 'clockwise',\n      'leftToRightReduced': 'anti-clockwise',\n      'rightToLeftIncreased': 'anti-clockwise',\n      'rightToLeftReduced': 'clockwise'\n    }[this.direction];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-progress-bar',\n  template: \"\\n    <div class=\\\"ng-progress\\\" *ngIf=\\\"state\\\" [class.active]=\\\"state.active\\\" [class.thick]=\\\"thick\\\">\\n      <div class=\\\"bar\\\" [ngStyle]=\\\"barStyles()\\\">\\n        <div class=\\\"bar-shadow\\\" [ngStyle]=\\\"shadowStyles()\\\"></div>\\n      </div>\\n      <div *ngIf=\\\"showSpinner\\\" class=\\\"spinner\\\" [ngClass]=\\\"spinnerClasses()\\\">\\n        <div class=\\\"spinner-icon\\\" [style.borderTopColor]=\\\"color\\\" [style.borderLeftColor]=\\\"color\\\"></div>\\n      </div>\\n    </div>\\n  \",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'ease': [{ type: Input },],\n'speed': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'thick': [{ type: Input },],\n'color': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}