{"version":3,"file":"progress.service.js","sourceRoot":"","sources":["../inlined/service/progress.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Subject} from \"rxjs/Subject\";\nimport {Observable} from \"rxjs/Observable\";\n\nimport 'rxjs/add/observable/timer';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/takeWhile';\nimport 'rxjs/add/operator/delay';\n\n\nexport class NgProgressService {\n\n  minimum;\n  speed;\n  trickleSpeed;\n  progress = 0;\n\n  /** Progress state */\n  state$: Subject<any>;\n  /** Trickling stream */\n  trickling$: Subject<any>;\n\n  constructor() {\n    this.state$ = new Subject();\n    this.trickling$ = new Subject();\n\n    /** while progress is started keep emitting values */\n    this.trickling$.switchMap((res) => {\n      return Observable\n        .timer(0, this.trickleSpeed)\n        .takeWhile(() => this.isStarted())\n        .do(() => this.inc(res))\n    }).subscribe();\n  }\n\n  /** Start */\n  start() {\n    if (!this.isStarted()) this.set(0);\n    this.trickling$.next();\n  }\n\n  /** Complete */\n  done() {\n    /** if it hasn't already started don't complete the progress */\n    if (!this.isStarted()) return;\n    this.set(.3 + .5 * Math.random());\n    this.set(1);\n  }\n\n  /** Set progress state */\n  set(n) {\n    this.progress = this.clamp(n, this.minimum, 1);\n    this.updateState(this.progress, true);\n    /** if progress completed */\n    if (n === 1) {\n      /** complete then hide progressbar */\n      Observable.of(n)\n        .delay(this.speed)\n        .do(() => {\n          this.updateState(this.progress, false);\n        })\n        .delay(this.speed)\n        .do(() => {\n          /** reset progress */\n          this.progress = 0;\n          this.updateState(this.progress, false)\n        }).subscribe();\n    }\n  }\n\n  /** Increment Progress */\n  inc(amount?) {\n    let n = this.progress;\n    /** if it hasn't start, start */\n    if (!this.isStarted()) this.start();\n    else {\n      if (typeof amount !== 'number') {\n        if (n >= 0 && n < 0.2) amount = 0.1;\n        else if (n >= 0.2 && n < 0.5) amount = 0.04;\n        else if (n >= 0.5 && n < 0.8) amount = 0.02;\n        else if (n >= 0.8 && n < 0.99) amount = 0.005;\n        else amount = 0;\n      }\n      n = this.clamp(n + amount, 0, 0.994);\n      this.set(n);\n    }\n  }\n\n  /** Is progress started*/\n  isStarted() {\n    return this.progress && this.progress < 1;\n  }\n\n  /** Helper */\n  clamp = (n, min, max) => {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  };\n\n  /** Update Progressbar State */\n  updateState(value, active) {\n    let state = {\n      value: value,\n      active: active\n    };\n    this.state$.next(state);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}